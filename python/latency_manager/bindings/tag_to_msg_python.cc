/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(tag_to_msg.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(c04b1dd6045d376caac2c5d1ac3e76ed)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/latency_manager/tag_to_msg.h>
// pydoc.h is automatically generated in the build directory
#include <tag_to_msg_pydoc.h>

void bind_tag_to_msg(py::module& m)
{

    using tag_to_msg = ::gr::latency_manager::tag_to_msg;


    py::class_<tag_to_msg,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<tag_to_msg>>(m, "tag_to_msg", D(tag_to_msg))

        .def(py::init(&tag_to_msg::make),
             py::arg("sizeof_stream_item"),
             py::arg("name"),
             py::arg("key_filter") = "",
             D(tag_to_msg, make))


        .def("current_tags", &tag_to_msg::current_tags, D(tag_to_msg, current_tags))


        .def("num_tags", &tag_to_msg::num_tags, D(tag_to_msg, num_tags))


        .def("set_display",
             &tag_to_msg::set_display,
             py::arg("d"),
             D(tag_to_msg, set_display))


        .def("set_key_filter",
             &tag_to_msg::set_key_filter,
             py::arg("key_filter"),
             D(tag_to_msg, set_key_filter))


        .def("key_filter", &tag_to_msg::key_filter, D(tag_to_msg, key_filter))

        ;
}
