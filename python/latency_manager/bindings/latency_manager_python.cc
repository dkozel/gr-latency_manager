/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(latency_manager.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(7694b472f4d745bfdaae62c7ee9ed582)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/latency_manager/latency_manager.h>
// pydoc.h is automatically generated in the build directory
#include <latency_manager_pydoc.h>

void bind_latency_manager(py::module& m)
{

    using latency_manager = ::gr::latency_manager::latency_manager;


    py::class_<latency_manager,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<latency_manager>>(m, "latency_manager", D(latency_manager))

        .def(py::init(&latency_manager::make),
             py::arg("max_tags_in_flight"),
             py::arg("tag_interval"),
             py::arg("itemsize"),
             D(latency_manager, make))


        ;
}
